name: Apply Glitch Effect to Nico Nico Video

on:
  workflow_dispatch:
    inputs:
      video_url:
        description: 'ニコニコ動画のURLを入力してください (例: https://www.nicovideo.jp/watch/smXXXXXXXX)'
        required: true
        type: string

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.x'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install yt-dlp
        sudo apt-get update
        sudo apt-get install -y ffmpeg

    - name: Create videos directory
      run: mkdir -p videos

    - name: Run video processing script
      id: process_video
      run: |
        python scripts/apply_effects.py "${{ inputs.video_url }}"
      env:
        # 環境変数としてFFMPEGやYT-DLP関連のパスを設定する必要がある場合（通常は不要だが、環境によっては役立つ）
        # PATH: /usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin

    - name: Find generated video file
      id: find_video
      run: |
        # 'videos' ディレクトリ内の最新の.mp4ファイルを見つける
        # GitHub Actionsの実行環境では、ファイルのタイムスタンプがUTCになる可能性があるため、
        # ファイル名のタイムスタンプとシステムタイムスタンプのどちらでソートするか検討
        # ここではファイル名のタイムスタンプに基づいてソート
        LATEST_VIDEO=$(ls -t videos/*.mp4 2>/dev/null | head -n 1)
        if [ -z "$LATEST_VIDEO" ]; then
          echo "Error: No .mp4 video file found in the 'videos' directory."
          exit 1
        fi
        echo "Found video file: $LATEST_VIDEO"
        echo "video_path=$LATEST_VIDEO" >> $GITHUB_OUTPUT
        echo "video_filename=$(basename "$LATEST_VIDEO")" >> $GITHUB_OUTPUT

    - name: Upload glitched video as artifact
      uses: actions/upload-artifact@v4
      with:
        name: glitched-video-${{ steps.find_video.outputs.video_filename }}
        path: ${{ steps.find_video.outputs.video_path }}

    - name: Commit and push glitched video to repository
      if: success() && steps.find_video.outputs.video_path # 処理が成功し、動画ファイルが見つかった場合のみ
      run: |
        git config user.name "github-actions[bot]"
        git config user.email "github-actions[bot]@users.noreply.github.com"
        git add ${{ steps.find_video.outputs.video_path }}
        git commit -m "Add glitched video: ${{ steps.find_video.outputs.video_filename }}" || echo "No changes to commit"
        git push
